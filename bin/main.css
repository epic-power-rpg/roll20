@charset "UTF-8";
/* Styles that apply everywhere */
.characterviewer label,
.characterviewer .label {
  display: inline-block;
  margin: 0;
  text-align: right;
  vertical-align: middle;
  font-size: 1em;
  font-weight: normal;
}

.characterviewer .charsheet {
  padding: 0;
  padding-top: 10px;
}

input[type=text] {
  padding: 1px 4px 1px 4px;
  height: 22px;
}

input[type=number] {
  padding: 1px 0px 1px 3px;
  text-align: center;
  height: 22px;
}

[data-groupname] button:not([type=roll]) {
  padding: 3px 8px 3px 8px;
  margin-top: 3px;
}

select {
  padding: 1px 4px 1px 4px;
  height: 22px;
  margin-bottom: 0px;
  text-align: center;
  text-align-last: center;
}

button.actionRollButton {
  padding: 2px 3px;
  font-size: 1.3em;
  margin: 0 3px;
  border-width: 1px;
}

/* Change the character for dice roll buttons to be
   the two joined squares character and give them the blue background */
button.btn.ui-draggable[type=roll],
button.actionRollButton {
  background-image: linear-gradient(90deg, #ddf, #99f);
}

button.btn.ui-draggable[type=roll]::before,
button.actionRollButton::before {
  font-family: sans-serif;
  content: "⧉";
}

/* Change the character for the do and roll dice button to be
   a big heavy two joined squares character */
button.do-and-roll::before {
  font-family: sans-serif;
  content: "⧉";
  font-size: 200%;
  font-weight: bold;
}

/* Change the character for do buttons to be
   the play forward character */
button.do::before {
  font-family: sans-serif;
  content: "▶";
}

button.do,
button.do-and-roll {
  background-image: linear-gradient(90deg, #ddf, #44f);
}

button.do {
  width: 18px;
}

button.big-control.do-and-roll {
  width: 20px;
}

.disable-do[value="1"] ~ .do {
  background-image: linear-gradient(90deg, #ddd, #ddd);
  pointer-events: none;
}

.disable-do-and-roll[value="1"] ~ .do-and-roll {
  background-image: linear-gradient(90deg, #ddd, #ddd);
  pointer-events: none;
}

/* Change the character for undo buttons to be
   the play backward character */
button.undo::before {
  font-family: sans-serif;
  content: "◀";
}

button.undo {
  background-image: linear-gradient(90deg, #f44, #fdd);
  line-height: 1;
  padding: 1px 1px;
}

/* Make action buttons look like roll buttons, but darken the borders */
button.do,
button.do-and-roll,
button.undo {
  border: 1px solid #999;
  border-bottom-color: #777;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
}

/* Generic styles */
.invisible {
  display: none;
}

.inline {
  display: inline-block;
}

.right {
  text-align: right;
}

.center {
  text-align: center;
}

.left {
  text-align: left;
}

.middle {
  vertical-align: middle;
}

.narrow.narrow.narrow {
  width: 25px;
}

.modifier-width.modifier-width.modifier-width {
  width: 35px;
}

.narrowish.narrowish.narrowish {
  width: 40px;
}

.medium.medium.medium {
  width: 50px;
}

.wideish.wideish.wideish {
  width: 60px;
}

.wide.wide.wide {
  width: 90px;
}

.wider.wider.wider {
  width: 150px;
}

.narrow-spacing {
  line-height: 1;
}

.spacer {
  height: 20px;
}

.inlne-spacer {
  width: 8px;
}

.horizontal-flex {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}

.horizontal-flex-center {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.align-center.align-center.align-center {
  align-items: center;
}

.flexing {
  flex-grow: 1;
}

.no-shrink {
  flex-shrink: 0;
}

.big.big.big.big {
  font-size: 150%;
  font-weight: normal;
}

.biggish.biggish.biggish.biggish {
  font-size: 130%;
  font-weight: normal;
}

.larger.larger.larger.larger {
  font-size: 110%;
}

.CP.CP.CP.CP {
  color: blue;
}

.TP.TP.TP.TP {
  color: #40C000;
}

.bold {
  font-weight: bold;
}

.number.ability {
  font-weight: bold;
}

.children-separated > :not(:first-child) {
  border: solid lightgrey;
  border-width: 1px 0px 0px 0px;
}

.label {
  display: inline-block;
  vertical-align: middle;
  text-align: right;
}

.value {
  display: inline-block;
  box-sizing: border-box;
}

.attribute-name {
  display: inline-block;
  vertical-align: middle;
  text-align: right;
}

.attribute-value {
  font-size: 150%;
  vertical-align: middle;
  margin: 1px;
  border-width: 1px;
  padding: 0px;
  box-sizing: border-box;
}

/* Make the height override the box's usual height */
input.attribute-value.attribute-value.attribute-value {
  height: 24px;
}

span.attribute-value {
  /* Make the height work for span. */
  display: inline-block;
  border-color: transparent;
}

button.reset-total {
  background-color: white;
  font-weight: bold;
  border-width: 1px;
  border-radius: 4px;
  border-color: lightgrey;
  line-height: 1;
  padding: 2px;
  vertical-align: middle;
}

button.convert-button {
  background-color: white;
  font-weight: bold;
  border-width: 1px;
  border-radius: 4px;
  border-color: lightgrey;
  padding: 0px 2px 4px 2px;
  vertical-align: middle;
  font-size: 200%;
}

input[disabled],
input[readonly] {
  border-color: transparent;
  background-color: transparent;
  padding: 0px;
}

.flex-stack {
  display: inline-flex;
  flex-direction: column;
  align-items: stretch;
}

.align-middle.align-middle.align-middle {
  align-items: middle;
}

.space-between {
  justify-content: space-between;
}

.text-stack {
  display: inline-block;
  vertical-align: middle;
}

.table-header > div {
  display: inline-block;
  text-align: center;
  font-weight: bold;
  border-color: black;
  border-style: solid;
  border-width: 0px 0px 1px 0px;
  margin-bottom: 2px;
}

.characterviewer textarea {
  box-sizing: border-box;
  height: 48px;
  overflow-y: auto;
  text-align: left;
}

/* ---------- Roll section ------------- */
.roll-section {
  display: flex;
  /* Get rid of the space the sheet puts above us. */
  margin-top: -26px;
}

.roll-select-section {
  display: inline-flex;
  flex-direction: row;
}

.save-roll {
  font-size: 14px;
  line-height: 15px;
  width: 15px;
  overflow-x: visible;
  padding: 1px 2px;
  border-width: 1px;
  border-radius: 3px;
  background-color: white;
}

input.saved-roll {
  height: 8px;
}

.save-radio-row {
  display: flex;
  flex-direction: row;
}

.save-pending[value="1"] ~ .save-roll {
  border-color: #FFBF00;
  box-shadow: 3px 3px 3px #FFBF00;
}

.save-pending[value="1"] ~ .save-radio-stack .radio {
  border-color: #FFBF00;
  background: #E8E8E8;
  box-shadow: 3px 3px 3px #FFBF00;
}

.roll-chosen[value="1"] ~ .save-radio-row > button.roll-1,
.roll-chosen[value="2"] ~ .save-radio-row > button.roll-2,
.roll-chosen[value="3"] ~ .save-radio-row > button.roll-3,
.roll-chosen[value="4"] ~ .save-radio-row > button.roll-4,
.roll-chosen[value="5"] ~ .save-radio-row > button.roll-5,
.roll-chosen[value="6"] ~ .save-radio-row > button.roll-6 {
  background-color: white;
  border-color: black;
}

/* Configure the radio button styling. */
.radio {
  padding: 0;
  margin: 2px;
  border: solid 1px #a8a8a8;
  cursor: pointer;
  width: 14px;
  height: 14px;
  border-radius: 50%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

.save-radio-stack {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  flex: 1;
}

radio > span.checked {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: buttontext;
}

.roll-description-section {
  display: inline-flex;
  flex-direction: column;
  flex-grow: 1;
}

.roll-description-line {
  display: flex;
  align-items: baseline;
}

.roll-description-line label {
  width: unset;
  margin: 0;
  padding-right: 8px;
  font-weight: normal;
}

.roll-description-line input + label {
  padding-left: 8px;
}

/* --------- Top section ----------------- */
.top-section {
  display: flex;
  justify-content: space-between;
  border-bottom: solid black 1px;
  margin-bottom: 6px;
  background: linear-gradient(to top, lightcyan 0%, white 100%);
}

/* ------ generic conditional appearance ------ */
.conditional-one > * {
  display: none;
}

.conditional-one > :first-child[value="1"] ~ * {
  display: inline-block;
}

.conditional-something > * {
  display: inline-block;
}

.conditional-something > :first-child[value=" "] ~ * {
  display: none;
}

.no-add-or-modify-buttons [data-groupname] button:not([type=roll]) {
  display: none;
}

/* ----------- Tabs and what they control  ------------- */
/* Attributes */
.attributecontrol[value=basic] ~ span.attribute-value,
.attributecontrol[value=basic] ~ button.reset-total,
.attributecontrol[value=basic] ~ .attribute-roll,
.attributecontrol[value=basic] ~ .not-basic-tab,
.cpcontrol[value=basic] ~ .not-basic-tab {
  display: none;
}

.attributecontrol:not([value=basic]) ~ input.attribute-value,
.attributecontrol:not([value=basic]) ~ button.reset-total .attributecontrol:not([value=basic]) ~ .CP,
.attributecontrol:not([value=basic]) ~ .basic-tab-only,
.cpcontrol:not([value=basic]) ~ .basic-tab-only {
  display: none;
}

/* Tabs */
.characterviewer .nav-tabs > li:not(.active) {
  background: #EEE;
  color: black;
  text-decoration: none;
  cursor: pointer;
}

.characterviewer .nav-tabs > li:not(.active) > a:hover,
.characterviewer .nav-tabs > li:not(.active) > a:focus {
  color: black;
  font-weight: bold;
  text-decoration: none;
  cursor: pointer;
}

.characterviewer .nav-tabs > .active > a {
  font-weight: bold;
  text-decoration: none;
  background-color: #616161;
  color: white;
}

.tab-holder {
  margin-bottom: -1px;
}

.tab {
  border: 1px solid #999;
  background: #EEE;
  padding: 4px 4px;
  border-radius: 4px 4px 0 0;
  font-size: 110%;
}

.tabcontrol[value=overview] ~ .tab[name=act_overview],
.tabcontrol[value=basic] ~ .tab[name=act_basic],
.tabcontrol[value=equipment] ~ .tab[name=act_equipment],
.tabcontrol[value=skills] ~ .tab[name=act_skills],
.tabcontrol[value=spells] ~ .tab[name=act_spells],
.tabcontrol[value=notes] ~ .tab[name=act_notes] {
  font-weight: bold;
  text-decoration: none;
  background-color: #616161;
  color: white;
  border-bottom: 1px solid transparent;
}

/* Sections */
.section {
  display: none;
}

.sectioncontrol[value=overview] ~ div.overview,
.sectioncontrol[value=basic] ~ div.basic,
.sectioncontrol[value=equipment] ~ div.equipment,
.sectioncontrol[value=skills] ~ div.skills,
.sectioncontrol[value=spells] ~ div.spells,
.sectioncontrol[value=notes] ~ div.notes {
  display: block;
}

/* Weight penalties */
.weight-penalty-table {
  border: solid black;
  border-width: 1px 0px;
}

.weight-penalty-table > div {
  text-align: center;
  display: flex;
  flex-direction: row;
}

.weight-penalty-table > div:not(:last-child):not(.table-header) {
  border-bottom: solid lightgrey 1px;
}

.weight-penalty-table > div > :nth-child(2) {
  display: inline-block;
  width: 30px;
}

.weight-penalty-table > div > :last-child {
  display: inline-block;
  width: 30px;
}

.weight-penalty-table > div > :first-child[value="1"] ~ * {
  font-weight: bold;
  padding: 2px 0px;
}

/* --------- Advantages ------------ */
.advantage-overview {
  display: flex;
  flex-direction: column;
}

.advantage-overview > div.table-header > div {
  text-align: center;
}

.advantage-overview > div.conditional-something > div,
.advantage-overview > div[data-groupname] > div {
  border: solid lightgrey;
  border-width: 0px 0px 1px 0px;
  padding-top: 2px;
  padding-bottom: 2px;
}

.advantage-overview > .conditional-something > :first-child[value="-1"] ~ * {
  color: red;
}

/* If the name wraps, make the lines close. */
.advantage-overview > div > div,
.advantage-overview span {
  line-height: 1;
  width: 120px;
  text-align: left;
}

/* Keep line height low for the containers of the names,
   or they will make single lines too tall. */
.advantage-overview > div.conditional-something {
  line-height: 1;
}

/* This avoids spaces between the elements in the row */
.advantage-row {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.advantage-row > div {
  display: inline-block;
}

.advantage-row.advantage-row > :first-child {
  width: 120px;
  padding-right: 4px;
  text-align: right;
}

.advantages .count-placeholder {
  height: 18px;
  width: 40px;
}

.advantage-row > .CP {
  display: inline-block;
  text-align: center;
  width: 26px;
}

.advantages .extraadvantagename {
  width: 124px;
  margin-top: -1px;
}

.advantages .extraadvantageCP.extraadvantageCP {
  color: blue;
  width: 40px;
  margin-top: -1px;
}

.advantages .extraadvantageCPdescription {
  display: inline-block;
  text-align: center;
  width: 26px;
}

/* ---------------- Epic Feats --------------- */
.feat-overview {
  display: inline-flex;
  flex-direction: column;
}

/* Add back margin for line spacing. 
   And avoid gaps between items in the row */
.feat-overview > div[data-groupname] > div {
  display: flex;
  flex-direction: row;
  align-items: center;
  padding-top: 2px;
  padding-bottom: 2px;
  border: solid lightgrey;
  border-width: 0px 0px 1px 0px;
}

div.featextraordinaryletter {
  width: 24px;
  margin-left: -2px;
  margin-right: -2px;
  font-weight: normal;
  border-color: transparent;
}

span.featextraordinaryletter {
  display: inline-block;
  width: 20px;
  text-align: center;
  font-weight: bold;
}

.feat-overview > .table-header > div.featname {
  width: 120px;
  margin-left: -2px;
}

/* Make multi-line names have less spacing */
.feat-overview span.featname {
  width: 120px;
  text-align: left;
  line-height: 1;
}

.featname {
  display: inline-block;
  width: 180px;
  text-align: right;
}

input.featname {
  margin-left: 3px;
  margin-top: -1px;
}

input.featextraordinary {
  width: 18px;
  margin-left: 4px;
  margin-top: -1px;
}

.featCP.featCP.featCP.featCP {
  width: 30px;
  color: blue;
}

input.featCP {
  margin-top: -1px;
}

/* ------------ Skills -------------- */
.skilldisciplineinfo {
  width: 40px;
}

.skillname {
  width: 150px;
  text-align: right;
}

.skillability {
  width: 40px;
  text-align: center;
}

.skillTP.skillTP.skillTP.skillTP {
  width: 30px;
  margin-left: 15px;
  margin-right: -10px;
  color: #40C000;
}

.skillCP.skillCP.skillCP.skillCP {
  width: 30px;
  color: blue;
}

.skillexpertise {
  width: 40px;
}

.skillattribute {
  width: 65px;
}

.skillbase.skillbase.skillbase.skillbase {
  width: 40px;
}

.skills div[data-groupname] span,
.skills-overview div[data-groupname] span {
  display: inline-block;
}

/* overview section */
.skills-overview .skillname {
  width: 100px;
}

.skills-overview > div[data-groupname] .skillname {
  line-height: 1;
  padding-top: 2px;
  padding-bottom: 2px;
}

.skills-overview .skillability {
  margin-left: -4px;
  margin-right: -4px;
  font-weight: normal;
  border-color: transparent;
}

/* Avoid gaps between items in the row 
   And make multi-line stuff line up */
/* Avoid space between items in the row */
.skills-overview .table-header {
  display: flex;
  flex-direction: row;
}

.skills-overview > div[data-groupname] > div {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.skills-overview .isdiscipline[value="1"] ~ * {
  display: none;
}

.skill-overview-row-container {
  display: flex;
  flex-direction: row;
  align-items: center;
  border-width: 0px 0px 1px 0px;
  border-color: lightgrey;
  border-style: solid;
}

.skill-roll.skill-roll.skill-roll.skill-roll {
  padding: 0px 2px;
  width: 24px;
  box-sizing: border-box;
  margin-left: 3px;
  margin-right: 3px;
}

/* skills section */
.isdiscipline[value="1"] ~ .skillname {
  width: 190px;
  text-align: left;
  font-weight: bold;
}

.isdiscipline[value="1"] ~ .skillability,
.isdiscipline[value="1"] ~ .skillattribute,
.isdiscipline[value="1"] ~ .skillbase {
  display: none;
}

/* Avoid space between items in the row */
.skills .table-header {
  display: flex;
  flex-direction: row;
}

.skills div[data-groupname] > div {
  display: flex;
  flex-direction: row;
  align-items: center;
  /* and make rows overlap */
  margin-top: -1px;
}

/* -------- Equipment --------- */
/* overview section */
.weapons-overview div[data-groupname] span {
  display: inline-block;
}

.weapons-overview .equipmentname {
  width: 100px;
  flex: 0 0 100px;
}

.weapons-overview > div[data-groupname] .equipmentname {
  line-height: 1;
  padding-top: 2px;
  padding-bottom: 2px;
}

/* Avoid gaps between items in the row 
   And make multi-line stuff line up */
/* Avoid space between items in the row */
.weapons-overview .table-header {
  display: flex;
  flex-direction: row;
}

.weapons-overview > div[data-groupname] > div {
  border-width: 0px 0px 1px 0px;
  border-color: lightgrey;
  border-style: solid;
}

.weapons-overview-row-container {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.weapons-overview .equipmentnotes {
  margin-left: 90px;
  margin-bottom: 6px;
  width: 150px;
}

/* equipment section */
.equipmentname {
  text-align: right;
  flex: 0 0 170px;
  width: 170px;
}

.equipmentweight.equipmentweight.equipmentweight {
  width: 50px;
}

.equipmentvalue.equipmentvalue.equipmentvalue {
  width: 50px;
}

.equipmentcount.equipmentcount.equipmentcount {
  width: 50px;
}

.armordefense.armordefense.armordefense {
  width: 40px;
  border-right: 0px;
  text-align: right;
}

.armormod.armormod.armormod {
  width: 40px;
  border-left: 0px;
}

.equipmentdamage {
  width: 60px;
  text-align: center;
}

.equipmentrange.equipmentrange.equipmentrange {
  width: 50px;
  text-align: center;
}

.equipmentnotes {
  flex: 1 1;
  width: 50px;
}

.equipment-list {
  width: 560px;
}

/* Avoid space between items in the row */
.equipment-list .table-header {
  margin-top: 10px;
  display: flex;
  flex-direction: row;
  align-items: flex-end;
}

.equipment div[data-groupname] > div {
  display: flex;
  flex-direction: row;
  align-items: center;
  /* and make rows overlap */
  margin-top: -1px;
}

/* ------------- Spells ------------*/
.tabcontrol[value=arcane] ~ .tab[name=act_arcane],
.tabcontrol[value=divine] ~ .tab[name=act_divine],
.tabcontrol[value=innate] ~ .tab[name=act_innate] {
  font-weight: bold;
  text-decoration: none;
  background-color: #616161;
  color: white;
  margin-bottom: -1px;
  border-bottom: 1px solid transparent;
}

.sectioncontrol[value=arcane] ~ div.arcane,
.sectioncontrol[value=divine] ~ div.divine,
.sectioncontrol[value=innate] ~ div.innate {
  display: inline-flex;
}

.spell-tabs {
  border-bottom: solid black 1px;
  margin-bottom: 6px;
  display: flex;
  align-items: center;
}
.spell-tabs > button[type=action] {
  border-bottom: 0px;
}
.spell-tabs > button[type=roll] {
  margin-bottom: 1px;
}

.spells div[data-groupname] span {
  display: inline-block;
}
.spells input[type=text]:not(.skillname) {
  text-align: center;
}

.arcane .skillattribute {
  text-align: right;
  width: 30px;
  margin-bottom: 2px;
}

.spellEP.spellEP.spellEP {
  width: 50px;
  margin-left: 15px;
}

.spellcasttime {
  width: 50px;
}

.spelltype {
  width: 65px;
}

.spellrange {
  width: 40px;
}

.spelltarget {
  width: 60px;
}

.spellduration {
  width: 70px;
}

.spellhasnote.spellhasnote.spellhasnote.spellhasnote {
  width: 12px;
  margin-left: 0px;
  margin-right: 1px;
  margin-bottom: 2px;
}

.isdiscipline[value="1"] ~ .skill-roll,
.isdiscipline[value="1"] ~ .spellEP,
.isdiscipline[value="1"] ~ .spellcasttime,
.isdiscipline[value="1"] ~ .spelltype,
.isdiscipline[value="1"] ~ .spellrange,
.isdiscipline[value="1"] ~ .spelltarget,
.isdiscipline[value="1"] ~ .spellduration,
.isdiscipline[value="1"] ~ .spellhasnote {
  display: none;
}
.isdiscipline[value="1"] ~ .spellhasnote + span.skillTP {
  margin-left: 448px;
}

.table-header .skill-roll {
  border-width: 0px;
}

.spell-note {
  flex-grow: 1;
  margin-bottom: 1px;
}

.arcane .spell-note {
  margin-left: 40px;
}

/* Avoid space between items in the row */
.spells .table-header {
  display: flex;
  flex-direction: row;
  align-items: flex-end;
}
.spells div[data-groupname] > div {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  /* and make rows overlap */
  margin-top: -1px;
}

.spell-row {
  display: flex;
  flex-direction: row;
  align-items: flex-end;
}

/* ------------ Notes -------------- */
.notecategory {
  width: 120px;
  text-align: right;
}

.notenote {
  width: 500px;
}

.notes div[data-groupname] > div {
  /* and make rows overlap */
  margin-top: -1px;
}
