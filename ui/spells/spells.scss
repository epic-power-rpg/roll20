@import '../components/gridTable/gridTable.scss';

/* ------------- Spells ------------*/

.tabcontrol[value="arcane"]~.tab[name="act_arcane"],
.tabcontrol[value="divine"]~.tab[name="act_divine"],
.tabcontrol[value="innate"]~.tab[name="act_innate"] {
  font-weight: bold;
  text-decoration: none;
  @include theme-color(selected-tab-color);
  @include theme-background-color(selected-tab-background-color);
  margin-bottom: -1px;
  border-bottom: 1px solid transparent;
}

.sectioncontrol[value="arcane"]~div.arcane,
.sectioncontrol[value="divine"]~div.divine,
.sectioncontrol[value="innate"]~div.innate {
  display: block;
}

$notes-popover-width: 30px;
.spell-tabs {

  border-bottom: solid 1px;
  @include theme-border-color(primary-color);
  margin-bottom: 6px;
  display: flex;
  align-items: center;

  >button[type="action"] {
    border-bottom: 0px;
  }

  >button[type="roll"] {
    margin-bottom: 1px;
  }
}

/* Avoid space between items in the row */
.spells {
  .spell-header-action-area {
    display: flex;
    gap: 8px;
    label, .label {
      @include theme-color(primary-color);
    }
    button.spellRoll {
      @include updateRollSectionButton();
    }
  }
  @import './spellsNotesPopover.scss';
  .arcane-spells-grid {
    $arcane-grid-template: getResponsiveGridWidths(
      1fr, // Discipline?
      4fr, // Name
      1fr, // Ability
      40px, // Mod
      20px, // Update roll section
      40px, // PWR
      1fr, // Cast Time
      70px, // Attack Type - Just wide enough to make "Missile" fit. Uses two lines for the header.
      1.5fr, // Range
      64px, // Target
      1.5fr, // Damage/ Duration
      $notes-popover-width, // N(otes)
      24px, // FP
      24px, // CP
      40px, // Exper.
      auto, // IQ Â±
      40px, // Base
    );

    @include epic-table-grid('arcane', $arcane-grid-template);
    @include epic-table-grid-row-border('arcane');
    button.updateRollSectionContent {
      @include updateRollSectionButton();
    }
    .narrow-table-heading {
      font-size: 12px;
      font-weight: normal !important;
    }

    .isdiscipline-grid[value="1"] {
      ~:not(.skillname-grid, .skillCP-grid, .skillexpertise-grid) {
        opacity: 0;
        cursor: default;
        pointer-events: none;
      }
    }

    .isdiscipline-grid[value="1"]~.skillname-grid {
      font-weight: bold;
      text-align: center;
    }
    .isdiscipline-grid:not([value="1"])~.skillname-grid {
      text-align: right;
    }

    .arcane-iq-plus-minus-attribute {
      white-space: nowrap;
    }
  }

  .divine-spells-grid {
    $divine-grid-template: getResponsiveGridWidths(
      40px, // Deity?
      2fr, // Name
      $notes-popover-width, // Notes
      40px, // PWR
      20px, // Update roll section
      1fr, // Cast time
      70px, // Attack Type - Just wide enough to make "Missile" fit. Uses two lines for the header.
      1fr, // Range
      1fr, // Target
      2fr, // Damage/Duration
    );
    @include epic-table-grid('divine', $divine-grid-template);
    @include epic-table-grid-row-border('divine');
    button.updateRollSectionContent {
      @include updateRollSectionButton();
    }

    .isdiscipline-grid[value="1"] {
      ~:not(.skillname-grid, .spellNotesPopover) {
        opacity: 0;
        cursor: default;
        pointer-events: none;
      }
    }

    .isdiscipline-grid[value="1"]~.skillname-grid {
      font-weight: bold;
      text-align: center;
    }
  }
  .innate-spells-grid {
    $innate-grid-template: getResponsiveGridWidths(
      40px, // Sphere?
      4fr, // Name
      $notes-popover-width, // Note Popover
      32px, //EP
      2fr, // Cast Time
      70px, // Attack Type - Just wide enough to make "Missile" fit. Uses two lines for the header.
      2fr, // Range
      3fr, // Target
      2fr, // Damage/Duration
      48px, // CP
    );
    @include epic-table-grid('innate', $innate-grid-template);
    @include epic-table-grid-row-border('innate');

    .innatesphere-hidden[value|="S"]{
      ~.skillname-grid {
        // If the row is a sphere, style it
        font-weight: bold;
        text-align: center;
      }
      ~:not(.skillname-grid, .skillCP-grid) {
        opacity: 0;
        cursor: default;
        pointer-events: none;
      }
    }
  }

  @include popover-control('spellNotePopover');
  div.spellNotePopover {
    .popover {
      label {
        text-align: left;
        font-weight: bold;
      }
    }
  }
}
